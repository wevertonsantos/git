git init : criação de um novo repositório instalando .git pasta

git add (arquivo) : comando para adicionar o arquivo no git
git add . : comando que adiciona diversos arquivos de uma vez só

git status : comando para verificar o status do repositório

git commit -m "seu texto aqui" : comando para enviar um arquivo com uma mensagem de texto
git commit a.txt -m "seu texto aqui" : comando para commitar um arquivo com uma mensagem de texto
git commit -a -m "seu texto aqui" : enviando todos os arquivos para commit

git branch : mostra todas as branchs
git branch -M main : criando uma branch (ramificação) chamada main que é onde o código correto (principal) será depositado
git branch <nome branch> : criando uma nova branch
git branch -d <nome branch> : deletando branch

git remote add origin (repositório https aqui): passo de sincronização para um 
repositório do git
git remote -v : verifica as origins adicionadas

git push : enviando todos os commits para o repositório
git push -u origin main : enviando para a branch main

git pull : sicronizar as alterações do repositório local para nossa branch

git clone (repo) . : clona um repositório do github no diretório atual

git rm (arquivo): remover um arquivo do repositório

git log : acessar um log de modificações feitas no projeto

git mv (arquivo) (para onde) : mover arquivo para outra pasta
exemplo: git mv rodape.css css/rodape.css 

git mv (arquivo nome antigo) (arquivo nome novo) : serve para renomear arquivo
exemplo : git mv rodap.css rodape.css

git checkout (arquivo) : retornando alterações para o padrão do arquivo
git checkout <nome branch> : mudando para outra branch
git checkout -b <nome branch> : mudando e criando nova branch tudo junto

arquivo - .gitignore - para ignorar arquivos

git reset --hard origin/(branch): desfazer todas as alterações do branch (commits) e retornar ao estado inicial

git merge <nome branch> : para unir branchs

git stash : salvar o código em algum lugar e retornar ao código padrão
git stash list : verificar todas as stashs criadas
git stash apply <número da stash> : recuperando e receber dados da stash
git stash show -p <número da stash> : mostra as alterações da stash
git stash clear : removendo todas as stashs
git stash drop <número da stash> : removendo stash por número

git tag -a <nome da tag> -m "<msg>" : serve como checkpoint de uma branch (demarcar estágios do desenvolvimento de algum recurso)
git tag : lista todas as tags